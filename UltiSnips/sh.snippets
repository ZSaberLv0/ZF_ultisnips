priority -10

# ============================================================
snippet template "file template" bm
WORK_DIR=\$(cd "\$(dirname "\$0")"; pwd)
${1:DST_PATH}=\$1
${2:SRC_PATH}=\$2
if test "0" = "1" \
	|| test "x-\$`!p snip.rv = t[1]`" = "x-" \
	|| test "x-\$`!p snip.rv = t[2]`" = "x-" \
	; then
	echo "usage:"
	exit 1
fi
${3}
endsnippet

# ============================================================
snippet calc "calc" bm
${2:ResultName}=\$((${1:A+B}))${3}
endsnippet

# ============================================================
snippet cd "current dir" bm
${1:_OLD_DIR}=\$(pwd)${2}
endsnippet

# ============================================================
snippet CD "current script dir" bm
${1:WORK_DIR}=\$(cd "\$(dirname "\$0")"; pwd)${2}
endsnippet

# ============================================================
snippet extcmd "external command" bm
${2:ResultName} = \`${1:ExtCmd}\`${3}
endsnippet

# ============================================================
snippet exist "file or dir exist" bm
if ${2:! }test -e "${1:FilePath}"; then
	${3}
fi${4}
endsnippet

# ============================================================
snippet getopts "getopts" bm

for arg in "\$@"; do
	shift
	case "\$arg" in
		"--${2:help}") set -- "\$@" "-`!p snip.rv = t[1]`" ;;
		*) set -- "\$@" "\$arg" ;;
	esac
done
${4:# -h      =>  h
# -h abc  =>  h:
}while getopts "`!p snip.rv = t[1]`:" opt >/dev/null 2>&1 ; do
	case "\$opt" in
		"${1:h}") ${3:echo h: \$OPTARG} ;;
		"?") echo invalid option: \$OPTARG ;;
	esac
done
${5}
endsnippet


# ============================================================
snippet null "output to null" im
>/dev/null 2>&1${1}
endsnippet

# ============================================================
snippet if "if statement" bm
if test "x-\$${1:Param}" = "x-${2:{TestValue0}}" ; then
	${3:{Action0}}
elif test "x-\$`!p snip.rv = t[1]`" = "x-${4:{TestValue1}}" ; then
	${5:{Action1}}
else
	${6:{Action2}}
fi${7}
endsnippet

# ============================================================
snippet for "for loop" bm
for ${1:i} in \`${2:ls}\` ; do
	${3:echo "\$`!p snip.rv = t[1]`"}
done${4}
endsnippet

# ============================================================
snippet foreach "foreach element" bm
for ${1:i} in \
	${2:a b c} \
	; do
	${3:echo "\$`!p snip.rv = t[1]`"}
done${4}
endsnippet

# ============================================================
snippet forrange "for in range" bm
for ${1:i} in \`seq ${2:0} ${3:10}\` ; do
	${4:echo "\$`!p snip.rv = t[1]`"}
done${5}
endsnippet

# ============================================================
snippet paramcheck "param empty check" bm
if test "x-\$${1:Param0}" = "x-" || test "x-\$${2:Param1}" = "x-" ; then
	${3:echo "show usage"}
	exit 1
fi${4}
endsnippet

# ============================================================
snippet resultval "result value" bm
${1:RESULT}="\$?"${2}
endsnippet

# ============================================================
snippet resultcheck "result value check" bm
${1:RESULT}="\$?"
if ! test "x-\$`!p snip.rv = t[1]`" = "x-0" ; then
	exit \$`!p snip.rv = t[1]`
fi${2}
endsnippet

# ============================================================
snippet filebasename "file base name without ext" bm
${2:ResultName}=\$(basename \${${1:ParamName}%.*})${3}
endsnippet

# ============================================================
snippet fileext "file ext" bm
${2:ResultName}=\${${1:ParamName}##*.}${3}
endsnippet

# ============================================================
snippet filename "file name" bm
${2:ResultName}=\${${1:ParamName}##*[/\\\\]}${3}
endsnippet

# ============================================================
snippet abspath "absolute path" bm
${2:ResultName}=$(cd -- "\$${1:RelativePath}" && pwd)${3}
endsnippet

# ============================================================
snippet parent "parent path" bm
${2:ResultName}=\${${1:ParamName}%[/\\\\]*}${3}
endsnippet

